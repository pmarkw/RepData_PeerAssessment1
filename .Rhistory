find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
find_package("KernSmooth")
install.packages("KernSmooth")
libarary(KernSmooth)
library(KernSmooth)
clear
load("C:/PMW/MyWorking.pmw/Coursera/RPrgWk2/.RData")
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/makeVector.R')
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/cachemean.R')
merk <- makeVector
merk
merk$set(1:100)
z <- c(1:100)
merk <- makeVector(z)
cachemean(merk)
cachemean(merk)
z <- c(1:10000)
merk <- makeVector(z)
cachemean(merk)
cachemean(merk)
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/makeVector.R')
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/cachemean.R')
?by()
?split()
library(datasets)
data(iris)
?iris
iris
iris
iris[species, 101:150]
iris[Species, 101:150]
iris["Species", 101:150]
iris["Species"]
iris["Species"][150]
iris[150,"Species"]
iris[101:150, "Species"]
head(iris)
iris[101:150, "Sepal.Length"]
mean(iris[101:150, "Sepal.Length"])
x <- iris["Species"] == "virginica"
x
mean(iris[101:150, "Sepal.Length"])
y <- apply(iris[101:150, 1:4], 2, mean)
y
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
x <- tapply(mtcars$hp, mtcars$cyl, mean)
x
x[8]
x["8"]
x["8"] - x["4"]
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
system.time(set.seed(1)
rpois(5, 2))
set.seed(1)
system.time(rpois(5,2))
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/makeMerkMatrix.R')
load("C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/.RData")
merk <- makeMerkMatrix(A)
system.time(merk.getinv)
system.time(merk.getinv())
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/makeMerkMatrix.R')
merk <- makeMerkMatrix(A)
merk
merk.get()
merk$get()
system.time(merk$getinv())
system.time(merk$getinv())
load("C:/PMW/MyWorking.pmw/Coursera/RPrgWk2/.RData")
set.seed(1)
rpois(5, 2)
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/cachematrix.R')
load("C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/.RData")
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/cachematrix.R')
makeCacheMatix(A)
makeCacheMatrix(A)
merk <- makeCacheMatrix(A)
merk$get
merk$get()
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/cachematrix.R')
setInternet2(use = TRUE)
library(nlme)
library(lattice)
library(datasets)
data(airquality)
head(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
install.packages("ggplot2")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
View(airquality)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
install(MiKTeX)
install.packages("MiKTeX")
setwd("C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1")
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
View(dfSteps)
hist("dfSteps")
hist(dfSteps$steps, dfSteps$date)
head(dfSteps$date)
is.factor(dsSteps$date)
is.factor("dsSteps$date")
dsSteps$date = factor("dsSteps$date")
is.factor("dfSteps$date")
dfSteps$date = factor("dfSteps$date")
is.factor("dfSteps$date")
View(dfSteps)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
hist(dfSteps$steps)
hist(dfSteps$steps, 61)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
hist(df$steps, 61)
View(df)
head(df$date)
head(as.POSIXlt(df$date))
head(as.POSIXct(df$date))
hist(df$steps, as.POSIXct(df$date))
head(as.Date(df$date))
View(df)
View(df)
daily <- aggregate(df["steps"], by=df[c("date")], FUN=sum)
View(daily)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
hist(daily$steps, breaks = daily$date);
hist(daily$steps, breaks = daily["date"]);
hist(daily$steps, breaks = as.factor(daily["date"]));
View(daily)
hist(daily)
hist(daily["steps"])
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
hist(daily$steps)
hist(daily$date)
View(daily)
View(df)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
View(interval)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
View(interval)
plot(interval$interval ~ interval$steps)
plot(interval$interval ~ interval$steps, type = "l")
plot(interval$steps ~ interval$interval, type = "l")
maxinterval <- max(interval$steps)
maxinterval <- interval$interval[max(interval$steps)]
max(interval$steps)
max(interval$steps)
which.max(interval$steps)
View(df)
miss <- df[df$steps == NA]
miss <- df[df$steps == "NA"]
miss <- df[is.na(df$steps)]
head(df$steps)
df$steps[1]
is.na(df$steps[1])
miss <- is.na(df$steps)
nas <- is.true(miss)
dfmiss <- cbind(df, miss)
View(dfmiss)
nrow(dfmiss[miss == TRUE])
nrow(dfmiss[miss = TRUE])
nrow(dfmiss["miss" = TRUE])
dfmiss[["miss"]]
clear
dfmiss[["miss"]=TRUE]
dfmiss[["miss"]][=TRUE]
dfmiss[["miss"]][TRUE]
merk <- subset(dfmiss, miss = TRUE)
View(merk)
merk <- subset(dfmiss, dfmiss$miss = TRUE)
merk <- subset(dfmiss, dfmiss[["miss"]] = TRUE)
merk <- subset(dfmiss, miss == TRUE)
View(merk)
View(dfmiss)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
nas
merk <- subset(dfmiss, miss == TRUE)
merk <- subset(dfmiss, dfmiss$miss == TRUE)
View(df)
View(df)
View(dfmiss)
View(interval)
View(merk)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
View(nas)
View(nas)
View(num)
View(interval)
merk <- nas[2-3,]
View(merk)
merk <- nas[,c(2,3)]
View(merk)
View(merk)
View(interval)
merk <- merge(nas[,c(2,3)], interval, by = "interval")
View(merk)
View(num)
View(dfmiss)
num <- subset(dfmiss[,c(1,2,3)], dfmiss$miss == FALSE)
View(num)
View(merk)
View(num)
num <- subset(dfmiss[,c(3,2,1)], dfmiss$miss == FALSE)
View(num)
dfimp <- rbind(merk, num)
View(dfimp)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
View(nas)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
View(impval)
View(nas)
View(num)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
View(impval)
View(nas)
View(num)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
View(nas)
View(avginterval)
View(avginterval)
View(avginterval)
source('C:/PMW/MyWorking.pmw/Coursera/RepData1/RepData_PeerAssessment1/TryScript.r')
View(dfimp)
View(dfimp)
View(nas)
View(dfimp)
merk <- weekdays(dfimp$date)
dfimp$date <- as.date(dfimp$date)
